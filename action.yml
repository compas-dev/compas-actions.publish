name: 'compas-actions.publish'
description: 'Publish COMPAS or its plugins to PYPI'

inputs:
  github_token:
    description: 'The Github token'
    required: true
  publish_to_pypi:
    description: 'Whether to publish to PYPI'
    required: false
    default: 'true'
  pypi_token:
    description: 'the PYPI account token'
    required: false
    default: ''
  build_ghpython_components:
    description: 'Whether to build gh_python components'
    required: false
    default: 'false'
  create_release:
    description: 'Whether to create a release on the repo'
    required: false
    default: 'true'
  python:
    description: 'which python version to build with'
    required: false
    default: '3.10'
  release_name_prefix:
    description: 'Add prefix in front of the version number, for example COMPAS 1.0.0, v is omitted'
    required: false
    default: ''
  sdist:
    description: 'Whether to create Source Distribution for this package using the sdist flag for setup.py'
    required: false
    default: 'true'
  bdist_wheel:
    description: 'Whether to create Wheel Distribution for this package using the bdist_wheel flag for setup.py'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Get Version From Tag
      id: tag_name
      run: |
        echo "current_version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Get Changelog Entry
      if: inputs.create_release == 'true'
      id: changelog_reader
      uses: mindsers/changelog-reader-action@v2
      with:
        version: ${{ steps.tag_name.outputs.current_version }}
        path: ./CHANGELOG.md

    - name: Assemble Release Name
      id: assemble_release_name
      shell: bash
      run: |
        if [ -z "${{ inputs.release_name_prefix }}" ]; then
          release_name="${{ github.ref_name }}"
        else
          release_name="${{ inputs.release_name_prefix }} ${{ steps.tag_name.outputs.current_version }}"
        fi
        echo Using release name: $release_name
        echo "release_name=$release_name" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: inputs.create_release == 'true'
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        body: ${{ steps.changelog_reader.outputs.changes }}
        token: ${{ inputs.github_token }}
        name: ${{ steps.assemble_release_name.outputs.release_name }}

    - if: inputs.build_ghpython_components == 'true'
      uses: compas-dev/compas-actions.build@v3
      with:
        invoke_lint: true
        check_import: true
        build_ghpython_components: true
        python: ${{ inputs.python }}
      
    - if: inputs.build_ghpython_components == 'false'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python }}

    - shell: bash
      if: inputs.publish_to_pypi == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
        python setup.py clean --all
        if [ "${{ inputs.sdist }}" == "true" ]; then
          python setup.py sdist
        fi
        if [ "${{ inputs.bdist_wheel }}" == "true" ]; then
          python setup.py bdist_wheel
        fi
        twine check dist/*
        twine upload dist/* --skip-existing --verbose
      env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ inputs.pypi_token }}
